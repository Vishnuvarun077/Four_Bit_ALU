$date
	Tue Oct 24 01:55:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Add_testbench $end
$var wire 1 ! cout $end
$var wire 4 " S [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % M $end
$scope module UUT $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % M $end
$var wire 1 ( W0 $end
$var wire 1 ) W1 $end
$var wire 1 * W2 $end
$var wire 1 + W3 $end
$var wire 1 ! cout $end
$var wire 1 , W6 $end
$var wire 1 - W5 $end
$var wire 1 . W4 $end
$var wire 4 / S [3:0] $end
$scope module fulladderblock1 $end
$var wire 1 ( A $end
$var wire 1 0 B $end
$var wire 1 % Cin $end
$var wire 1 . Cout $end
$var wire 1 1 D0 $end
$var wire 1 2 D1 $end
$var wire 1 3 D2 $end
$var wire 1 4 S $end
$upscope $end
$scope module fulladderblock2 $end
$var wire 1 ) A $end
$var wire 1 5 B $end
$var wire 1 . Cin $end
$var wire 1 - Cout $end
$var wire 1 6 D0 $end
$var wire 1 7 D1 $end
$var wire 1 8 D2 $end
$var wire 1 9 S $end
$upscope $end
$scope module fulladderblock3 $end
$var wire 1 * A $end
$var wire 1 : B $end
$var wire 1 - Cin $end
$var wire 1 , Cout $end
$var wire 1 ; D0 $end
$var wire 1 < D1 $end
$var wire 1 = D2 $end
$var wire 1 > S $end
$upscope $end
$scope module fulladderblock4 $end
$var wire 1 + A $end
$var wire 1 ? B $end
$var wire 1 , Cin $end
$var wire 1 ! Cout $end
$var wire 1 @ D0 $end
$var wire 1 A D1 $end
$var wire 1 B D2 $end
$var wire 1 C S $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
b0 /
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#10
0C
0>
09
12
17
1<
1A
11
16
1;
1@
1.
1-
1,
1!
03
08
0=
0B
10
15
1:
1?
0(
0)
0*
0+
b0 "
b0 /
04
b1111 $
b1111 '
b1111 #
b1111 &
1%
#20
0!
1C
0A
0,
1>
0<
0-
19
07
0.
00
05
0:
0?
1(
1)
1*
1+
b1111 "
b1111 /
14
02
b0 #
b0 &
0%
#30
